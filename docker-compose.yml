version: "3.7"
services:
  postgres:
    hostname: postgres
    build:
      context: ./docker-psql/.
    env_file: ./docker-psql/.env
    user: postgres
    volumes:
      - ./docker-psql/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - concerts
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  mvc:
    hostname: mvc
    build:
      context: ./concert-demos-rest-service-mvc/.
    ports:
      - "8080:8080"
    networks:
      - concerts
    expose:
      - 8080
    depends_on:
      postgres:
        condition: service_healthy

  webflux:
    hostname: webflux
    build:
      context: ./concert-demos-rest-service-webflux/.
    ports:
      - "8081:8081"
    networks:
      - concerts
    expose:
      - 8081
    depends_on:
      postgres:
        condition: service_healthy

networks:
  concerts:
    driver: bridge